<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--数据源配置文件-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <!--配置连接数据库中的参数-->
        <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></property>
        <property name="url" value="jdbc:oracle:thin:@localhost:1521:XE"></property>
        <property name="username" value="myoracle"></property>
        <property name="password" value="myoracle"></property>
    </bean>

    <!--配置SessionFactory,用于管理创建Session的，这个也是Spring为我们提供好了-->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <property name="hibernateProperties"><!--配置管理hibernate的一些属性-->
            <props>
                <!--配置数据库方言，便于让hibernate将转成正确的sql，因为不同的数据库sql语句的设计上是存在差异的，
                就好比不同地方的人说不同的方言。而Hibernate呢，它会所有的“方言”，我们要做的，就是告诉它，我们需要它说哪种“方言”-->
                <prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>
                <!--
                create：
每次加载hibernate时都会删除上一次的生成的表，然后根据你的model类再重新来生成新表，哪怕两次没有任何改变也要这样执行，这就是导致数据库表数据丢失的一个重要原因。
create-drop ：
每次加载hibernate时根据model类生成表，但是sessionFactory一关闭,表就自动删除。
update：
最常用的属性，第一次加载hibernate时根据model类会自动建立起表的结构（前提是先建立好数据库），以后加载hibernate时根据 model类自动更新表结构，即使表结构改变了但表中的行仍然存在不会删除以前的行。要注意的是当部署到服务器后，表结构是不会被马上建立起来的，是要等 应用第一次运行起来后才会。
validate ：
每次加载hibernate时，验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值。
                -->
                <prop key="hibernate.hbm2ddl.auto">create</prop>
                <prop key="hibernate.show_sql">true</prop><!--是否打印sql语句-->
                <prop key="hibernate.format_sql">true</prop><!--是否格式化sql语句-->
              <!--  <prop key="hibernate.current_session_context_class">thread</prop>-->
            </props>
        </property>
        <property name="configLocations"><!--加载hibernate的配置文件-->
            <list>
                <value>
                    classpath*:configs/hibernate.cfg.xml
                </value>
            </list>
        </property>
    </bean>

    <!--配置事物管理器-->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"></property><!--一般一个事物管理一个sessionFactory-->
    </bean>

    <!--配置代理事物-->
    <bean id="transactionBase" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean" lazy-init="true" abstract="true">
        <property name="transactionManager" ref="transactionManager"></property><!--事物管理器-->
        <property name="transactionAttributes"><!--配置事物的描述，在那些地方需要加事物-->
            <props>
                <prop key="add*">PROPAGATION_REQUIRED,-Exception</prop>
                <prop key="update*">PROPAGATION_REQUIRED,-Exception</prop>
                <prop key="insert*">PROPAGATION_REQUIRED,-Exception</prop>
                <prop key="modify*">PROPAGATION_REQUIRED,-Exception</prop>
                <prop key="get*">PROPAGATION_NEVER,-Exception</prop><!--查询以非事物的方式进行-->
            </props>
        </property>
    </bean>
</beans>