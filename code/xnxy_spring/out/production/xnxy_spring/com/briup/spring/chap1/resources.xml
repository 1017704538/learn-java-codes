<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">
<!--
	Resources针对文件的统一接口
	 -UrlResource:URL对应的资源，根据一个URL地址既可以构建
	 -ClassPathResource:获取类路径下的资源文件
	 -FileSystemResource：获取文件系统中的资源文件
	 -ServletContextResource:ServletContext封装资源，用于访问ServletContext环境下的资源
	 -InputStreamResource:针对输入流封装的资源
	 -ByteArrayResource:针对字节数组封装的资源
	 
	 ResourceLoader
	 	-所用的application context 实现了ResourceLoader接口
	 	
	 public interface ResourceLoader{
	 		Resource getResource(String location);
	 }
	 
	 Resource template = ctx.getResource("some/resource/path/myTemplate.txt");
	 Resource template = ctx.getResource("classpath:some/resource/path/myTemplate.txt");
	 Resource template = ctx.getResource("file:some/resource/path/myTemplate.txt");
	 
	 getResource中location的写法有如下几种
	 prefix前缀		案例    											说明
	 classpath:		classpath:com/briup/spring/chap2/life.xml		从classpath中加载
	 file：			file:/data/life.xml								用URL从文件系统中加载
	 http:			http://myserver/logoo.png						通过URL从网络加载
	 （none）			/spring/chap2/life.xml							这种相对路径的写法依赖于ApplicationContext
	 
 -->
	<bean name="resourcetest" class="com.briup.spring.aop.bean.ResourceTest"/>
</beans>