<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
 xmlns:context="http://www.springframework.org/schema/context"  
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
 xsi:schemaLocation="http://www.springframework.org/schema/beans  
      http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
      http://www.springframework.org/schema/context  
      http://www.springframework.org/schema/context/spring-context.xsd" >
      <!--context:component-scan包含context:annotation-config的全部功能，通常使用前者后，不再使用后者
      	 context:component-scan一般用于基于类的注解（包括成员变量或成员方法的注解），但是context:annotation-config只能在完成bean注册后，去处理bean类中的
      	 成员变量或成员方法的注解
      	  basp-package指向扫描那个包下的注解类
      	
       -->
   
      <!-- <context:component-scan base-package="spring.aop.bean.annotation"></context:component-scan> -->
      
  <!--     默认情况下，spring中自动发现并被注册bean的条件是：
      	使用@Component, @Repository, @Service, @Constroller其中之一的注解
      	或者使用基于@Component的自定义注解
      	
      	可以通过过滤器修改上边的行为，如下边的例子XML配置忽略所有@Repository注解并用“stub”代替
      -->
      
       <!-- <context:component-scan base-package="spring.aop.bean.annotation">
       		
       		<context:include-filter type="regex" expression=".*Stub.*Repository"/>
       		排除@Repository注解
       		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
       </context:component-scan> -->
       
       <context:component-scan base-package="com.briup.spring.aop.bean.annotation"></context:component-scan>
       
       
</beans>